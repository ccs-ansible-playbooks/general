---
- name: "Create ansibleadmin user"

  become: true

  vars:
    host: " lin_servers"
    # local user's public key to add to new user
    local_user_name: "{{ local_user | default('ansible') }}"
    new_user_name: "ansibleadmin"

  hosts: "{{ host }}"

  tasks:
    - name: "Create user group"
      ansible.builtin.group:
        name: "{{ new_user_name }}"
        state: "present"

    - name: "Create user"
      register: new_user
      ansible.builtin.user:
        create_home: true
        group: "{{ new_user_name }}"
        name: "{{ new_user_name }}"
        shell: "/bin/bash"
        state: "present"

    - name: "Create ssh dir for user"
      ansible.builtin.file:
        group: "{{ new_user_name }}"
        mode: "0700"
        owner: "{{ new_user_name }}"
        path: "{{ new_user.home }}/.ssh"
        state: "directory"

    - name: "Setup sudo access for new user"
      ansible.builtin.copy:
        content: |
          ansibleadmin    ALL=(ALL)       NOPASSWD:ALL
        dest: "/etc/sudoers.d/ansibleadmin"
        group: "root"
        mode: "0440"
        owner: "root"
        validate: "visudo -cf %s"

    - name: "Get details of user on this controller"
      become: false
      delegate_to: "localhost"
      run_once: true
      vars:
        ansible_connection: "local"
      block:
        - name: "Get local user's home directory"
          changed_when: false
          register: local_user_home
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
              if uname -s | grep -iqs 'darwin'; then
                dscl . -list /Users | grep -qsE '^{{ local_user_name }}$' && dscl . -read /Users/{{ local_user_name }} NFSHomeDirectory | awk '{ print $2 }'
              else
                awk -F: '$1=="{{ local_user_name }}" { print $6 }' /etc/passwd
              fi

        - name: "Look for ed25519 key"
          block:
            - name: "Get ed25519 public key"
              ansible.builtin.set_fact:
                local_pubkey: "{{ lookup('file', local_user_home.stdout~'/.ssh/id_ed25519.pub') }}"

          rescue:
            - name: "Look for ecdsa key"
              block:
                - name: "Get ecdsa public key"
                  ansible.builtin.set_fact:
                    local_pubkey: "{{ lookup('file', local_user_home.stdout~'/.ssh/id_ecdsa.pub') }}"

              rescue:
                - name: "Get rsa public key"
                  ansible.builtin.set_fact:
                    local_pubkey: "{{ lookup('file', local_user_home.stdout~'/.ssh/id_rsa.pub') }}"

    - name: "Add the public key of the local user to the new use authorizid_keys"
      ansible.posix.authorized_key:
        key: "{{ local_pubkey }}"
        state: "present"
        user: "{{ new_user_name }}"
